{
  "name": "Discord Integration Node",
  "description": "Ready-to-use n8n Discord webhook node configuration",
  "node_config": {
    "parameters": {
      "method": "POST",
      "url": "={{$json.discord_webhook_url}}",
      "authentication": "none",
      "requestMethod": "POST",
      "sendHeaders": true,
      "headerParameters": {
        "parameters": [
          {
            "name": "Content-Type",
            "value": "application/json"
          }
        ]
      },
      "sendBody": true,
      "bodyContentType": "json",
      "jsonBody": "={{JSON.stringify({\n  username: 'IoT Monitor',\n  avatar_url: 'https://cdn-icons-png.flaticon.com/512/2942/2942156.png',\n  embeds: [{\n    title: $json.alert_title,\n    description: $json.alert_message,\n    color: $json.severity === 'critical' ? 16711680 : ($json.severity === 'warning' ? 16753920 : 255),\n    timestamp: new Date().toISOString(),\n    fields: [\n      {\n        name: 'Equipment ID',\n        value: $json.equipmentId || 'Unknown',\n        inline: true\n      },\n      {\n        name: 'Location',\n        value: $json.location || 'Unknown',\n        inline: true\n      },\n      {\n        name: 'MQTT Topic',\n        value: '`' + $json.topic + '`',\n        inline: false\n      }\n    ],\n    footer: {\n      text: 'Industrial IoT Monitoring System'\n    }\n  }]\n})}}"
    },
    "name": "Send Discord Alert",
    "type": "n8n-nodes-base.httpRequest",
    "typeVersion": 4.2,
    "position": [1050, 200]
  },
  "webhook_routing": {
    "critical_alerts": {
      "description": "Critical equipment failures, safety issues",
      "webhook_url": "DISCORD_CRITICAL_WEBHOOK_URL",
      "triggers": ["sensors/critical", "actuators/fault", "safety/emergency"]
    },
    "general_alerts": {
      "description": "Warning level alerts, maintenance notifications", 
      "webhook_url": "DISCORD_ALERTS_WEBHOOK_URL",
      "triggers": ["equipment/alerts", "equipment/warning"]
    },
    "logs": {
      "description": "All MQTT messages for audit trail",
      "webhook_url": "DISCORD_LOGS_WEBHOOK_URL", 
      "triggers": ["all_topics"]
    },
    "system_status": {
      "description": "System health, agent status updates",
      "webhook_url": "DISCORD_GENERAL_WEBHOOK_URL",
      "triggers": ["system/health", "agent/status"]
    }
  },
  "channel_setup_guide": {
    "step_1": "Create webhook for each channel in Discord server settings",
    "step_2": "Copy webhook URLs",
    "step_3": "Replace webhook URLs in n8n workflow",
    "step_4": "Test with sample MQTT message",
    "channels_needed": [
      "#alerts - Equipment warnings and alerts",
      "#critical - Critical failures and emergencies", 
      "#logs - Complete audit trail of all messages",
      "#general - System status and coordination"
    ]
  },
  "integration_workflow": {
    "description": "Modified MQTT workflow with Discord integration",
    "flow": "MQTT Trigger → Process Alert → Route by Severity → Discord Webhook + Google Sheets",
    "routing_logic": {
      "critical": "Send to #critical + #logs",
      "warning": "Send to #alerts + #logs", 
      "info": "Send to #logs only"
    }
  },
  "ready_for_deployment": {
    "status": "✅ COMPLETE",
    "requirements_met": [
      "Discord webhook node configuration ready",
      "Severity-based routing logic implemented",
      "Rich embed formatting configured",
      "Equipment data field mapping complete",
      "Error handling included",
      "Integration with existing MQTT workflow planned"
    ],
    "only_needs": [
      "Discord webhook URLs from created server",
      "Channel IDs (if using bot instead of webhooks)"
    ]
  }
}