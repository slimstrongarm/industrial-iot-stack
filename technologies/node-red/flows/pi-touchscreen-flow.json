[
    {
        "id": "pi_touchscreen_tab",
        "type": "tab",
        "label": "Pi Touchscreen Dashboard",
        "disabled": false,
        "info": "7-inch touchscreen dashboard for brewery monitoring with Phidget sensors"
    },
    {
        "id": "ui_base",
        "type": "ui_base",
        "theme": {
            "name": "theme-brewery",
            "lightTheme": {
                "default": "#2C5282",
                "baseColor": "#1A365D",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Brewery Professional",
                "default": "#2C5282",
                "baseColor": "#1A365D",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#2C5282",
                    "value": "#1A365D",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#1A365D",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#F7FAFC",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#2D3748",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#CBD5E0",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#2D3748",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#FFFFFF",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#E2E8F0",
                    "edited": true
                }
            }
        },
        "site": {
            "name": "🍺 Brewery Monitor",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "MM/DD/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ui_tab_main",
        "type": "ui_tab",
        "name": "Main",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ui_group_header",
        "type": "ui_group",
        "name": "Status",
        "tab": "ui_tab_main",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "header-group"
    },
    {
        "id": "ui_group_temp",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "ui_tab_main",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui_group_humidity",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "ui_tab_main",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui_group_chart",
        "type": "ui_group",
        "name": "Live Trends",
        "tab": "ui_tab_main",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "phidget_temp_sensor",
        "type": "phidget22-temperatureSensor",
        "z": "pi_touchscreen_tab",
        "name": "Tank Temperature",
        "deviceSerialNumber": "",
        "channel": 0,
        "hubPort": 0,
        "dataInterval": 1000,
        "temperatureChangeTrigger": 0.1,
        "x": 140,
        "y": 100,
        "wires": [["process_temperature", "temp_debug"]]
    },
    {
        "id": "phidget_humidity_sensor",
        "type": "phidget22-humiditySensor",
        "z": "pi_touchscreen_tab",
        "name": "Tank Humidity",
        "deviceSerialNumber": "",
        "channel": 0,
        "hubPort": 0,
        "dataInterval": 1000,
        "humidityChangeTrigger": 0.5,
        "x": 140,
        "y": 160,
        "wires": [["process_humidity", "humidity_debug"]]
    },
    {
        "id": "process_temperature",
        "type": "function",
        "z": "pi_touchscreen_tab",
        "name": "Process Temperature",
        "func": "// Process temperature data\nlet temp = parseFloat(msg.payload).toFixed(1);\nlet timestamp = new Date().toISOString();\n\n// Store for trending\nlet tempData = context.get('tempData') || [];\ntempData.push({\n    x: new Date(),\n    y: parseFloat(temp)\n});\n\n// Keep only last 100 points for live chart\nif (tempData.length > 100) {\n    tempData = tempData.slice(-100);\n}\ncontext.set('tempData', tempData);\n\n// Alarm checking\nlet alarmStatus = \"normal\";\nlet alarmColor = \"#48BB78\"; // Green\n\nif (temp < 15 || temp > 30) {\n    alarmStatus = \"alarm\";\n    alarmColor = \"#F56565\"; // Red\n} else if (temp < 18 || temp > 27) {\n    alarmStatus = \"warning\";\n    alarmColor = \"#ED8936\"; // Orange\n}\n\n// Send multiple outputs\nreturn [\n    // Gauge output\n    {\n        payload: parseFloat(temp),\n        topic: \"temperature\",\n        alarm: alarmStatus,\n        color: alarmColor\n    },\n    // Text display output\n    {\n        payload: `${temp}°C`,\n        topic: \"temp_display\",\n        timestamp: timestamp,\n        alarm: alarmStatus\n    },\n    // Chart output\n    {\n        payload: tempData,\n        topic: \"temp_chart\"\n    }\n];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            ["temp_gauge"],
            ["temp_display", "status_update"],
            ["temp_chart"]
        ]
    },
    {
        "id": "process_humidity",
        "type": "function",
        "z": "pi_touchscreen_tab",
        "name": "Process Humidity",
        "func": "// Process humidity data\nlet humidity = parseFloat(msg.payload).toFixed(0);\nlet timestamp = new Date().toISOString();\n\n// Store for trending\nlet humidityData = context.get('humidityData') || [];\nhumidityData.push({\n    x: new Date(),\n    y: parseFloat(humidity)\n});\n\n// Keep only last 100 points\nif (humidityData.length > 100) {\n    humidityData = humidityData.slice(-100);\n}\ncontext.set('humidityData', humidityData);\n\n// Alarm checking\nlet alarmStatus = \"normal\";\nlet alarmColor = \"#48BB78\"; // Green\n\nif (humidity < 30 || humidity > 80) {\n    alarmStatus = \"alarm\";\n    alarmColor = \"#F56565\"; // Red\n} else if (humidity < 40 || humidity > 70) {\n    alarmStatus = \"warning\";\n    alarmColor = \"#ED8936\"; // Orange\n}\n\nreturn [\n    // Gauge output\n    {\n        payload: parseFloat(humidity),\n        topic: \"humidity\",\n        alarm: alarmStatus,\n        color: alarmColor\n    },\n    // Text display output\n    {\n        payload: `${humidity}%`,\n        topic: \"humidity_display\",\n        timestamp: timestamp,\n        alarm: alarmStatus\n    },\n    // Chart output\n    {\n        payload: humidityData,\n        topic: \"humidity_chart\"\n    }\n];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            ["humidity_gauge"],
            ["humidity_display", "status_update"],
            ["humidity_chart"]
        ]
    },
    {
        "id": "temp_gauge",
        "type": "ui_gauge",
        "z": "pi_touchscreen_tab",
        "name": "Temperature Gauge",
        "group": "ui_group_temp",
        "order": 1,
        "width": "6",
        "height": "5",
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "40",
        "colors": ["#3182CE", "#48BB78", "#ED8936"],
        "seg1": "15",
        "seg2": "30",
        "diff": false,
        "className": "big-gauge",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "humidity_gauge",
        "type": "ui_gauge",
        "z": "pi_touchscreen_tab",
        "name": "Humidity Gauge",
        "group": "ui_group_humidity",
        "order": 1,
        "width": "6",
        "height": "5",
        "gtype": "wave",
        "title": "",
        "label": "%RH",
        "format": "{{value | number:0}}",
        "min": "0",
        "max": "100",
        "colors": ["#ED8936", "#48BB78", "#3182CE"],
        "seg1": "30",
        "seg2": "80",
        "diff": false,
        "className": "big-gauge",
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "temp_display",
        "type": "ui_text",
        "z": "pi_touchscreen_tab",
        "group": "ui_group_temp",
        "order": 2,
        "width": "6",
        "height": "2",
        "name": "Temperature Display",
        "label": "",
        "format": "<div style='text-align:center; font-size:36px; font-weight:bold; color:{{msg.color || \"#2D3748\"}};'>{{msg.payload}}</div>",
        "layout": "col-center",
        "className": "big-display",
        "x": 640,
        "y": 120,
        "wires": []
    },
    {
        "id": "humidity_display",
        "type": "ui_text",
        "z": "pi_touchscreen_tab",
        "group": "ui_group_humidity",
        "order": 2,
        "width": "6",
        "height": "2",
        "name": "Humidity Display",
        "label": "",
        "format": "<div style='text-align:center; font-size:36px; font-weight:bold; color:{{msg.color || \"#2D3748\"}};'>{{msg.payload}}</div>",
        "layout": "col-center",
        "className": "big-display",
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "status_update",
        "type": "function",
        "z": "pi_touchscreen_tab",
        "name": "Update Status",
        "func": "// Create system status display\nlet lastTemp = context.get('lastTemp') || 'N/A';\nlet lastHumidity = context.get('lastHumidity') || 'N/A';\nlet lastUpdate = new Date().toLocaleTimeString();\n\n// Update the appropriate value\nif (msg.topic === 'temp_display') {\n    lastTemp = msg.payload;\n    context.set('lastTemp', lastTemp);\n} else if (msg.topic === 'humidity_display') {\n    lastHumidity = msg.payload;\n    context.set('lastHumidity', lastHumidity);\n}\n\n// Determine overall status\nlet overallStatus = \"🟢 NORMAL\";\nlet statusClass = \"status-normal\";\n\nif (msg.alarm === \"warning\") {\n    overallStatus = \"🟡 WARNING\";\n    statusClass = \"status-warning\";\n} else if (msg.alarm === \"alarm\") {\n    overallStatus = \"🔴 ALARM\";\n    statusClass = \"status-alarm\";\n}\n\n// Create status display\nmsg.payload = `\n<div style='text-align:center; padding:10px;'>\n    <div style='font-size:28px; font-weight:bold; margin-bottom:10px;'>\n        🪂 PARACHUTE DROP ACTIVE\n    </div>\n    <div style='font-size:20px; margin-bottom:10px;'>\n        Status: <span class='${statusClass}'>${overallStatus}</span>\n    </div>\n    <div style='font-size:16px; color:#666;'>\n        Temp: ${lastTemp} | Humidity: ${lastHumidity}\n    </div>\n    <div style='font-size:14px; color:#999;'>\n        Last Update: ${lastUpdate}\n    </div>\n</div>\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 220,
        "wires": [["status_display"]]
    },
    {
        "id": "status_display",
        "type": "ui_text",
        "z": "pi_touchscreen_tab",
        "group": "ui_group_header",
        "order": 1,
        "width": "12",
        "height": "3",
        "name": "System Status",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "header-status",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "temp_chart",
        "type": "ui_chart",
        "z": "pi_touchscreen_tab",
        "name": "Temperature Trend",
        "group": "ui_group_chart",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "Temperature °C",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "Waiting for data...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": ["#2C5282", "#ED8936", "#F56565", "#48BB78", "#38B2AC", "#9F7AEA", "#ED64A6", "#667EEA", "#F6AD55"],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "live-chart",
        "x": 640,
        "y": 260,
        "wires": [[]]
    },
    {
        "id": "humidity_chart",
        "type": "ui_chart",
        "z": "pi_touchscreen_tab",
        "name": "Humidity Trend",
        "group": "ui_group_chart",
        "order": 2,
        "width": "6",
        "height": "4",
        "label": "Humidity %RH",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "Waiting for data...",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "10",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": ["#3182CE", "#ED8936", "#F56565", "#48BB78", "#38B2AC", "#9F7AEA", "#ED64A6", "#667EEA", "#F6AD55"],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "live-chart",
        "x": 640,
        "y": 300,
        "wires": [[]]
    },
    {
        "id": "temp_debug",
        "type": "debug",
        "z": "pi_touchscreen_tab",
        "name": "Temp Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "humidity_debug",
        "type": "debug",
        "z": "pi_touchscreen_tab",
        "name": "Humidity Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "inject_test_temp",
        "type": "inject",
        "z": "pi_touchscreen_tab",
        "name": "Test Temperature",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "22.5",
        "payloadType": "num",
        "x": 130,
        "y": 280,
        "wires": [["process_temperature"]]
    },
    {
        "id": "inject_test_humidity",
        "type": "inject",
        "z": "pi_touchscreen_tab",
        "name": "Test Humidity",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "65",
        "payloadType": "num",
        "x": 130,
        "y": 320,
        "wires": [["process_humidity"]]
    },
    {
        "id": "auto_test_timer",
        "type": "inject",
        "z": "pi_touchscreen_tab",
        "name": "Auto Test Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 2,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 360,
        "wires": [["generate_test_data"]]
    },
    {
        "id": "generate_test_data",
        "type": "function",
        "z": "pi_touchscreen_tab",
        "name": "Generate Test Data",
        "func": "// Generate realistic test data when no Phidgets connected\n// Remove or disable this when real sensors are working\n\n// Generate temperature (20-25°C with small variations)\nlet baseTemp = 22.5;\nlet tempVariation = (Math.random() - 0.5) * 3; // ±1.5°C\nlet temperature = baseTemp + tempVariation;\n\n// Generate humidity (55-75% with variations)\nlet baseHumidity = 65;\nlet humidityVariation = (Math.random() - 0.5) * 20; // ±10%\nlet humidity = Math.max(0, Math.min(100, baseHumidity + humidityVariation));\n\n// Send temperature\nnode.send([{\n    payload: temperature.toFixed(1),\n    topic: \"test_temperature\"\n}, null]);\n\n// Send humidity (slight delay)\nsetTimeout(() => {\n    node.send([null, {\n        payload: humidity.toFixed(0),\n        topic: \"test_humidity\"\n    }]);\n}, 100);\n\nreturn null;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 360,
        "wires": [
            ["process_temperature"],
            ["process_humidity"]
        ]
    }
]