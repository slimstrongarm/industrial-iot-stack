version: '3.8'

services:
  # Grafana - Visualization Platform
  grafana:
    image: grafana/grafana:10.3.1
    container_name: iiot-grafana
    ports:
      - "3000:3000"
    environment:
      # Admin credentials
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      
      # Plugin installation
      - GF_INSTALL_PLUGINS=grafana-mqtt-datasource,grafana-worldmap-panel,grafana-clock-panel,grafana-piechart-panel,yesoreyeram-infinity-datasource
      
      # Server configuration
      - GF_SERVER_ROOT_URL=https://grafana.${DOMAIN:-localhost}
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      
      # Anonymous access (read-only dashboards)
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      
      # SMTP configuration for alerts
      - GF_SMTP_ENABLED=${SMTP_ENABLED:-false}
      - GF_SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}:${SMTP_PORT:-587}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM:-grafana@industrial-iot.local}
      
      # Feature toggles
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
      - ./dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influxdb
      - postgres
    networks:
      - iiot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # InfluxDB - Time Series Database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: iiot-influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-adminpassword}
      - DOCKER_INFLUXDB_INIT_ORG=industrial-iot
      - DOCKER_INFLUXDB_INIT_BUCKET=sensors
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-super-secret-auth-token}
      - DOCKER_INFLUXDB_INIT_RETENTION=90d
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
      - ./influxdb/scripts:/docker-entrypoint-initdb.d
    networks:
      - iiot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Telegraf - Metrics Collection Agent
  telegraf:
    image: telegraf:1.29-alpine
    container_name: iiot-telegraf
    environment:
      - INFLUX_TOKEN=${INFLUXDB_TOKEN:-super-secret-auth-token}
      - INFLUX_ORG=industrial-iot
      - INFLUX_BUCKET=sensors
      - INFLUX_URL=http://influxdb:8086
      - MQTT_SERVER=tcp://mqtt-broker:1883
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - influxdb
    networks:
      - iiot-network
    restart: unless-stopped

  # Prometheus - Metrics Collection (optional, for system metrics)
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: iiot-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - iiot-network
    restart: unless-stopped

networks:
  iiot-network:
    external: true

volumes:
  grafana_data:
    driver: local
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
  prometheus_data:
    driver: local